<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
        				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 组件自动扫描 -->
	<context:component-scan base-package="com.bjtu.zs"
		annotation-config="true" />

	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		system-properties-mode="FALLBACK" /><!-- 解决username和系统环境的冲突 -->
	<context:property-placeholder location="classpath:mailConfiguration.properties"
		system-properties-mode="FALLBACK" />
	<!-- 配置数据源 -->
	<!-- <bean id="dataSourceTest" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- destroy-method="close"> -->
	<!-- <property name="driverClassName" value="${driver}" /> <property name="url" 
		value="${url}" /> <property name="username" value="${name}" /> <property 
		name="password" value="${password}" /> -->
	<!-- 初始化连接大小 -->
	<!-- <property name="initialSize" value="${initialSize}"></property> -->
	<!-- 连接池最大数量 -->
	<!-- <property name="maxActive" value="${maxActive}"></property> -->
	<!-- 连接池最大空闲 -->
	<!-- <property name="maxIdle" value="${maxIdle}"></property> -->
	<!-- 连接池最小空闲 -->
	<!-- <property name="minIdle" value="${minIdle}"></property> -->
	<!-- 获取连接最大等待时间 -->
	<!-- <property name="maxWait" value="${maxWait}"></property> -->
	<!-- </bean> -->
	<bean id="dataSource" class="com.bjtu.zs.util.FixedBasicDataSource"
		destroy-method="close"><!-- 在关闭容器时关闭改bean，并且关闭数据库的连接池 -->

		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="150" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="20" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="30" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="true" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="10" />
		<!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="1000" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="10" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL " />
	</bean>


	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis所映射的数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描pojo目录 -->
		<property name="typeAliasesPackage" value="com.bjtu.zs.pojo"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/bjtu/zs/dao/mapping/*.xml"></property>
		<!-- 事务配置 -->
		<!-- <property name="transactionFactory"> <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" 
			/> </property> -->
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.bjtu.zs.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx 
		单独使用Mybatis时使用 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy> <tx:annotation-driven 
		transaction-manager="transactionManager" /> -->

	<!-- 使用aop定义事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="upload*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="clear*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="after*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" />
			<tx:method name="pag*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 只对业务逻辑(service)层实施事务 -->
	<aop:config>
		<aop:pointcut id="txPointcut"
			expression="execution(* com.bjtu.zs.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>


	<!-- 下面开始对activiti工作流进行整合 -->


	<!-- 流程引擎配置信息 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="databaseType" value="mysql" />
		<!-- 事务管理 -->
		<property name="transactionManager" ref="transactionManager" />
		<!-- 是否更新数据库实例 -->
		<property name="databaseSchemaUpdate" value="true" />
		<!-- 是否使用job executor -->
		<property name="jobExecutorActivate" value="true" />

		<!-- 流程模型的自动部署路径 -->
		<property name="deploymentResources"
			value="classpath*:/org/activiti/spring/autodeployment/autodeploy.*.bpmn20.xml" />

		<!-- 自动部署的模式 -->
		<property name="deploymentMode" value="single-resource" />

		<!-- 使用视图定义用户 -->
		<property name="dbIdentityUsed" value="false" />


		<!-- 邮件配置 -->
		<property name="mailServerHost" value="smtp.qq.com"></property>
		<property name="mailServerPort" value="587"></property>
		<property name="mailServerUsername" value="631710518@qq.com"></property>
		<property name="mailServerPassword" value="rpyiktvhpshbbbih"></property>
		<property name="mailServerUseSSL" value="true"></property>
		<!-- <property name="mailServerDefaultFrom" value="${mailServerDefaultFrom}"></property> 
			<property name="mailServerUseTLS" value="${mailServerUseTLS}"></property> -->


		<property name="beans">
			<map>
				<entry key="mail" value-ref="mail" />
			</map>
		</property>
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>


	<!-- 通过流程引擎获取系统所需的相关服务 -->

	<!-- -->
	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<!-- -->
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<!-- -->
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<!-- -->
	<bean id="formService" factory-bean="processEngine"
		factory-method="getFormService" />
	<!-- -->
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<!-- -->
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />
		
	
	<bean id="mail" class="com.bjtu.zs.util.MailEntity">
		<property name="from" value="631710518@qq.com"></property>
	</bean>
</beans>